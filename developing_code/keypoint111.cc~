#include <iostream>
//#include <opencv2/core/core.hpp>
//#include <opencv2/features2d/features2d.hpp>
//#include <opencv2/highgui/highgui.hpp>
#include <opencv2/opencv.hpp>
#include "ORBextractor.h"
using namespace std;
using namespace cv;

int main ( int argc, char** argv )
{
    //-- 讀取圖像
    Mat img_1 = imread ( "1.png" );
    Mat mImGray=img_1;
    Mat outimg1,outimg2;//輸出圖像
    cvtColor(mImGray,mImGray,CV_RGB2GRAY);//轉換爲灰度圖

    //opencv中接口函數
    std::vector<KeyPoint> keypoints_1,keypoints_2;
    Mat descriptors_1,descriptors_2;
    Ptr<FeatureDetector> detector = ORB::create();
    Ptr<DescriptorExtractor> descriptor = ORB::create();
    detector->detect ( mImGray,keypoints_1 );
    descriptor->compute ( mImGray, keypoints_1, descriptors_1 );
    drawKeypoints( img_1, keypoints_1, outimg1, Scalar::all(-1), DrawMatchesFlags::DEFAULT );
    imshow("opencv提取ORB特徵點",outimg1);

    //調用ORB SLAM中特徵提取函數
    ORBextractor* mpIniORBextractor;
    mpIniORBextractor = new ORBextractor(500,1.2,8,20,10);
    (*mpIniORBextractor)(mImGray,cv::Mat(),keypoints_2,descriptors_2 ) ;
    drawKeypoints( img_1, keypoints_2, outimg2, Scalar::all(-1), DrawMatchesFlags::DEFAULT );
    imshow("ORB SLAM提取ORB特徵點",outimg2);
    waitKey(0);
    return 0;
}
